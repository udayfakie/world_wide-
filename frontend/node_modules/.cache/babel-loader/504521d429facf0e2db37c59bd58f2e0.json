{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Udey\\\\Desktop\\\\collection\\\\amazona\\\\frontend\\\\src\\\\screen\\\\ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Helmet } from \"react-helmet-async\";\nimport { useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Button } from \"react-bootstrap\";\nimport { Store } from \"../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen() {\n  _s();\n\n  const navigate = useState();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      shippingAddress\n    }\n  } = state;\n  const [fullName, setFullName] = useState(shippingAddress.fullName || \"\");\n  const [address, setAddress] = useState(shippingAddress.address || \"\");\n  const [city, setCity] = useState(shippingAddress.cart || \"\");\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || \"\");\n  const [country, setCountry] = useState(shippingAddress.country || \"\");\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS',\n      payload: {\n        fullName,\n        address,\n        city,\n        postalCode,\n        country\n      }\n    });\n    localStorage.setItem('shippingAddress', JSON.stringify({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    navigate('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container small-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"fullName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: fullName,\n            onChange: e => setFullName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: address,\n            onChange: e => setAddress(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: city,\n            onChange: e => setCity(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"postalCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: postalCode,\n            onChange: e => setPostalCode(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: country,\n            onChange: e => setCountry(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n} // import React, { useContext, useEffect, useState } from 'react';\n// import { Helmet } from 'react-helmet-async';\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n// import { useNavigate } from 'react-router-dom';\n// import { Store } from '../Store';\n// import CheckoutSteps from '../components/CheckoutSteps';\n// export default function ShippingAddressScreen() {\n//   const navigate = useNavigate();\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const {\n//     userInfo,\n//     cart: { shippingAddress },\n//   } = state;\n//   const [fullName, setFullName] = useState(shippingAddress.fullName || '');\n//   const [address, setAddress] = useState(shippingAddress.address || '');\n//   const [city, setCity] = useState(shippingAddress.city || '');\n//   const [postalCode, setPostalCode] = useState(\n//     shippingAddress.postalCode || ''\n//   );\n//   useEffect(() => {\n//     if (!userInfo) {\n//       navigate('/signin?redirect=/shipping');\n//     }\n//   }, [userInfo, navigate]);\n//   const [country, setCountry] = useState(shippingAddress.country || '');\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     ctxDispatch({\n//       type: 'SAVE_SHIPPING_ADDRESS',\n//       payload: {\n//         fullName,\n//         address,\n//         city,\n//         postalCode,\n//         country,\n//       },\n//     });\n// localStorage.setItem(\n//   'shippingAddress',\n//   JSON.stringify({\n//     fullName,\n//     address,\n//     city,\n//     postalCode,\n//     country,\n//   })\n// );\n// navigate('/payment');\n//   };\n//   return (\n//     <div>\n//       <Helmet>\n//         <title>Shipping Address</title>\n//       </Helmet>\n//       <CheckoutSteps step1 step2></CheckoutSteps>\n//       <div className=\"container small-container\">\n//         <h1 className=\"my-3\">Shipping Address</h1>\n//         <Form onSubmit={submitHandler}>\n//           <Form.Group className=\"mb-3\" controlId=\"fullName\">\n//             <Form.Label>Full Name</Form.Label>\n//             <Form.Control\n//               value={fullName}\n//               onChange={(e) => setFullName(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"address\">\n//             <Form.Label>Address</Form.Label>\n//             <Form.Control\n//               value={address}\n//               onChange={(e) => setAddress(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"city\">\n//             <Form.Label>City</Form.Label>\n//             <Form.Control\n//               value={city}\n//               onChange={(e) => setCity(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"postalCode\">\n//             <Form.Label>Postal Code</Form.Label>\n//             <Form.Control\n//               value={postalCode}\n//               onChange={(e) => setPostalCode(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"country\">\n//             <Form.Label>Country</Form.Label>\n//             <Form.Control\n//               value={country}\n//               onChange={(e) => setCountry(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <div className=\"mb-3\">\n//             <Button variant=\"primary\" type=\"submit\">\n//               Continue\n//             </Button>\n//           </div>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// }\n\n_s(ShippingAddressScreen, \"zaceYUrnsK5RUA+1zt3AKWMSulw=\");\n\n_c = ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["C:/Users/Udey/Desktop/collection/amazona/frontend/src/screen/ShippingAddressScreen.js"],"names":["Helmet","useState","useContext","Form","Button","Store","ShippingAddressScreen","navigate","state","dispatch","ctxDispatch","cart","shippingAddress","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","type","payload","localStorage","setItem","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import { Helmet } from \"react-helmet-async\";\r\nimport { useState, useContext} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Store } from \"../Store\";\r\n\r\nexport default function ShippingAddressScreen() {\r\n    const navigate = useState();\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n       \r\n       cart: { shippingAddress },\r\n  } = state;\r\n\r\n  const [fullName, setFullName] = useState(shippingAddress.fullName || \"\");\r\n  const [address, setAddress] = useState(shippingAddress.address ||\"\");\r\n  const [city, setCity] = useState(shippingAddress.cart ||\"\");\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode ||\"\");\r\n  \r\n  const [country, setCountry] = useState(shippingAddress.country ||\"\");\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({\r\n        type: 'SAVE_SHIPPING_ADDRESS',\r\n        payload: {\r\n        fullName,\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      },\r\n    });\r\n    localStorage.setItem(\r\n        'shippingAddress',\r\n        JSON.stringify({\r\n          fullName,\r\n          address,\r\n          city,\r\n          postalCode,\r\n          country,\r\n        })\r\n      );\r\n      navigate('/payment');\r\n  };\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Shipping Address</title>\r\n      </Helmet>\r\n      <div className=\"container small-container\">\r\n      <h1 className=\"my-3\">Shipping Address</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\" controlId=\"fullName\">\r\n          <Form.Label>Full Name</Form.Label>\r\n          <Form.Control\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            value={postalCode}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mb-3\">\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useContext, useEffect, useState } from 'react';\r\n// import { Helmet } from 'react-helmet-async';\r\n// import Form from 'react-bootstrap/Form';\r\n// import Button from 'react-bootstrap/Button';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Store } from '../Store';\r\n// import CheckoutSteps from '../components/CheckoutSteps';\r\n\r\n// export default function ShippingAddressScreen() {\r\n//   const navigate = useNavigate();\r\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\r\n//   const {\r\n//     userInfo,\r\n//     cart: { shippingAddress },\r\n//   } = state;\r\n//   const [fullName, setFullName] = useState(shippingAddress.fullName || '');\r\n//   const [address, setAddress] = useState(shippingAddress.address || '');\r\n//   const [city, setCity] = useState(shippingAddress.city || '');\r\n//   const [postalCode, setPostalCode] = useState(\r\n//     shippingAddress.postalCode || ''\r\n//   );\r\n//   useEffect(() => {\r\n//     if (!userInfo) {\r\n//       navigate('/signin?redirect=/shipping');\r\n//     }\r\n//   }, [userInfo, navigate]);\r\n//   const [country, setCountry] = useState(shippingAddress.country || '');\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     ctxDispatch({\r\n//       type: 'SAVE_SHIPPING_ADDRESS',\r\n//       payload: {\r\n//         fullName,\r\n//         address,\r\n//         city,\r\n//         postalCode,\r\n//         country,\r\n//       },\r\n//     });\r\n    // localStorage.setItem(\r\n    //   'shippingAddress',\r\n    //   JSON.stringify({\r\n    //     fullName,\r\n    //     address,\r\n    //     city,\r\n    //     postalCode,\r\n    //     country,\r\n    //   })\r\n    // );\r\n    // navigate('/payment');\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <Helmet>\r\n//         <title>Shipping Address</title>\r\n//       </Helmet>\r\n\r\n//       <CheckoutSteps step1 step2></CheckoutSteps>\r\n//       <div className=\"container small-container\">\r\n//         <h1 className=\"my-3\">Shipping Address</h1>\r\n//         <Form onSubmit={submitHandler}>\r\n//           <Form.Group className=\"mb-3\" controlId=\"fullName\">\r\n//             <Form.Label>Full Name</Form.Label>\r\n//             <Form.Control\r\n//               value={fullName}\r\n//               onChange={(e) => setFullName(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"address\">\r\n//             <Form.Label>Address</Form.Label>\r\n//             <Form.Control\r\n//               value={address}\r\n//               onChange={(e) => setAddress(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"city\">\r\n//             <Form.Label>City</Form.Label>\r\n//             <Form.Control\r\n//               value={city}\r\n//               onChange={(e) => setCity(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"postalCode\">\r\n//             <Form.Label>Postal Code</Form.Label>\r\n//             <Form.Control\r\n//               value={postalCode}\r\n//               onChange={(e) => setPostalCode(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"country\">\r\n//             <Form.Label>Country</Form.Label>\r\n//             <Form.Control\r\n//               value={country}\r\n//               onChange={(e) => setCountry(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <div className=\"mb-3\">\r\n//             <Button variant=\"primary\" type=\"submit\">\r\n//               Continue\r\n//             </Button>\r\n//           </div>\r\n//         </Form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}