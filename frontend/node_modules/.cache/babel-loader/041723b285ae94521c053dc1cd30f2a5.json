{"ast":null,"code":"// import { Link, useLocation, useNavigate } from \"react-router-dom\";\n// import Container from \"react-bootstrap/Container\";\n// import Form from \"react-bootstrap/Form\";\n// import Button from \"react-bootstrap/Button\";\n// import { Helmet } from \"react-helmet-async\";\n// import Axios from \"axios\";\n// import { useState, useContext, useEffect } from \"react\";\n// import { Store } from \"../Store\";\n// import { toast } from \"react-toastify\";\n// import { getError } from \"../utils\";\n// export default function SigninScreen() {\n//   const navigate = useNavigate();\n//   const { search } = useLocation();\n//   const redirectInUr = new URLSearchParams(search).get(\"redirect\");\n//   const redirect = redirectInUr ? redirectInUr : \"/\";\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const { userInfo } = state;\n//   const submitHandler = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const { data } = await Axios.post(\"/api/users/signin\", {\n//         email,\n//         password,\n//       });\n//       ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//       navigate(redirect || \"/\");\n//     } catch (err) {\n//       toast.error(getError(err));\n//     }\n//   };\n//   useEffect(() => {\n//     if (userInfo) {\n//       navigate(redirect);\n//     }\n//   }, [navigate, redirect, userInfo]);\n//   return (\n//     <Container className=\"small-container\">\n//       <Helmet>\n//         <title>Sign In</title>\n//       </Helmet>\n//       <h1 className=\"my-3\">Sign In</h1>\n//       <Form onSubmit={submitHandler}>\n//         <Form.Group className=\"mb-3\" controlId=\"email\">\n//           <Form.Label>Email</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             required\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"password\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             required\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </Form.Group>\n//         <div className=\"mb-3\">\n//           <Button type=\"submit\">Sign In</Button>\n//         </div>\n//         <div className=\"mb-3\">\n//           New customer?\n//           <Link to={`/signup?redirect=${redirect}`}>Create your account</Link>\n//         </div>\n//       </Form>\n//     </Container>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/Udey/Desktop/collection/amazona/frontend/src/screen/SigninScreen.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { Link, useLocation, useNavigate } from \"react-router-dom\";\r\n// import Container from \"react-bootstrap/Container\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import { Helmet } from \"react-helmet-async\";\r\n// import Axios from \"axios\";\r\n// import { useState, useContext, useEffect } from \"react\";\r\n// import { Store } from \"../Store\";\r\n// import { toast } from \"react-toastify\";\r\n// import { getError } from \"../utils\";\r\n\r\n// export default function SigninScreen() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const { search } = useLocation();\r\n//   const redirectInUr = new URLSearchParams(search).get(\"redirect\");\r\n//   const redirect = redirectInUr ? redirectInUr : \"/\";\r\n\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\r\n//   const { userInfo } = state;\r\n\r\n//   const submitHandler = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const { data } = await Axios.post(\"/api/users/signin\", {\r\n//         email,\r\n//         password,\r\n//       });\r\n//       ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\r\n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n//       navigate(redirect || \"/\");\r\n//     } catch (err) {\r\n//       toast.error(getError(err));\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (userInfo) {\r\n//       navigate(redirect);\r\n//     }\r\n//   }, [navigate, redirect, userInfo]);\r\n\r\n//   return (\r\n//     <Container className=\"small-container\">\r\n//       <Helmet>\r\n//         <title>Sign In</title>\r\n//       </Helmet>\r\n//       <h1 className=\"my-3\">Sign In</h1>\r\n//       <Form onSubmit={submitHandler}>\r\n//         <Form.Group className=\"mb-3\" controlId=\"email\">\r\n//           <Form.Label>Email</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             required\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\" controlId=\"password\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             required\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n//         <div className=\"mb-3\">\r\n//           <Button type=\"submit\">Sign In</Button>\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           New customer?\r\n//           <Link to={`/signup?redirect=${redirect}`}>Create your account</Link>\r\n//         </div>\r\n//       </Form>\r\n//     </Container>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}